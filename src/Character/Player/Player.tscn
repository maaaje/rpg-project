[gd_scene load_steps=6 format=2]

[ext_resource path="res://assets/character/player/playeranimations.png" type="Texture" id=1]
[ext_resource path="res://src/Functions/Stats.tscn" type="PackedScene" id=2]
[ext_resource path="res://src/Interface/Bar.tscn" type="PackedScene" id=3]

[sub_resource type="GDScript" id=1]
script/source = "extends KinematicBody2D

# PLAYER SIGNALS
signal shoot_item()


# MOVEMENT VARIABLES
export var ACCEL = 550
export var FRICTION = 550
export var MAX_SPEED = 40
export var MAX_SPEED_SPRINT = 60
var velocity = Vector2.ZERO

# FIREBALL SCENE AND SPAWN POSITION
const fireball_scene = preload(\"res://src/Spells/Fireball.tscn\")
onready var spell_spawn_position = $Sprite/Position2D
var shoot_item = null

# ENUM STATES FOR STATE_MACHINE
enum {
	MOVE,
	ROLL,
	ATTACK
}
var state = MOVE

# PLAYER STATS RELATED VARIABLES AND NODES
#onready var healthbar = $Camera2D/Interface/Bar/TextureProgress
onready var stats = $PlayerStats
onready var health_bar = $Bar/HealthBar

func _ready():
	$Bar.update_healthbar_maxhealth(25)

func _physics_process(delta):
	match state:
		MOVE:
			move_state(delta)
		
		ROLL:
			pass
			
		ATTACK:
			attack_state(delta)	
			
	if Input.is_action_just_pressed(\"simulate_player_damage\"):
		take_damage(randi()%5 +1)
		


# ------------------- STATE_MACHINE FOR MOVEMENT ------------------------
func move_state(delta):
	var input_vector = Vector2.ZERO
	
	input_vector.x = Input.get_action_strength(\"ui_right\") - Input.get_action_strength(\"ui_left\")
	input_vector.y = Input.get_action_strength(\"ui_down\") - Input.get_action_strength(\"ui_up\")
	input_vector = input_vector.normalized()
	
	if input_vector.x < 0:
		$Sprite.flip_h = true
		$Sprite/Position2D.position.x = 7
	else:
		$Sprite.flip_h = false
		$Sprite/Position2D.position.x = -7
	
	if input_vector != Vector2.ZERO:
		if Input.is_action_pressed(\"shift\"):
			velocity = velocity.move_toward(input_vector * MAX_SPEED_SPRINT, ACCEL * delta)
		else:
			velocity = velocity.move_toward(input_vector * MAX_SPEED, ACCEL * delta)
	else:
		velocity = velocity.move_toward(Vector2.ZERO, FRICTION * delta)
		
	velocity = move_and_slide(velocity)
	
	if Input.is_action_just_pressed(\"attack\"):
		state = ATTACK
	
	
func attack_state(delta):
	#velocity = Vector2.ZERO
	#Character soll beim Angreifen immer stehen bleiben
	#velocity = move_and_slide(velocity)
	#Bewegungseingaben w채hrend die Attack-Animation ausgef체hrt wird, sorgen sonst daf체r, dass der Spieler auch nach
	#dem Angriff noch l채uft und erst durch die FRICTION abgebremst wird. Spieler soll sofort stillstehen bei Angriff
	emit_signal(\"shoot_item\")
	state = MOVE
	
func attack_animation_finished():
	state = MOVE

# ------------------- FIREBALL CODE ------------------------ 
func _on_Player_shoot_item():
	shoot_fireball()
	print(\"Feuerball geschossen\")

func shoot_fireball():
	spawn_fireball()
	shoot_item.launch()
	shoot_item = null 	

func spawn_fireball():
	if shoot_item == null:
		shoot_item = fireball_scene.instance()
		spell_spawn_position.add_child(shoot_item)

# ------------------- DAMAGE AND DEATH CODE ------------------------
func take_damage(dmg):
	print(\"Maximale Leben: \" + stats.max_health as String)
	print(\"Leben vor Schaden: \" + stats.health as String)
	stats.health -= dmg
	$Bar.update_healthbar(stats.health)
	print(\"Neue Leben: \" + stats.health as String)
	
func _on_PlayerStats_no_health():
	print(\"Spieler gestorben\")
"

[sub_resource type="CapsuleShape2D" id=2]
radius = 2.29835
height = 3.50285

[node name="Player" type="KinematicBody2D"]
collision_mask = 14
script = SubResource( 1 )
MAX_SPEED = 50

[node name="Camera2D" type="Camera2D" parent="."]
current = true
limit_left = 0
limit_top = 0

[node name="Sprite" type="Sprite" parent="."]
position = Vector2( 0, -5 )
texture = ExtResource( 1 )
hframes = 5
frame = 4

[node name="Position2D" type="Position2D" parent="Sprite"]
position = Vector2( 7, 4 )
__meta__ = {
"_editor_description_": ""
}

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2( 0.775909, 0.632875 )
rotation = 1.5708
shape = SubResource( 2 )

[node name="Area2D" type="Area2D" parent="."]
position = Vector2( 0.775909, 0.632875 )
rotation = 1.5708

[node name="SceneTriggerCollision" type="CollisionShape2D" parent="Area2D"]
shape = SubResource( 2 )

[node name="PlayerStats" parent="." instance=ExtResource( 2 )]

[node name="Bar" parent="." instance=ExtResource( 3 )]
margin_left = -12.0
margin_top = -16.0
margin_right = 36.0
margin_bottom = -8.0
rect_scale = Vector2( 0.5, 0.5 )
[connection signal="shoot_item" from="." to="." method="_on_Player_shoot_item"]
[connection signal="no_health" from="PlayerStats" to="." method="_on_PlayerStats_no_health"]
